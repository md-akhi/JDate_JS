import SHTokenDefn from "./tokendefn.js";
export default class SHLexerConfig {
	static SINGLE_QUOTE: any = `\\'`;
	static COMMA: any = `,`;
	static DOT: any = `.`;
	static SPACE: any = `[ \t\\s]`;

	static tokenDefinitions: any = {
		SPACE: `${SHLexerConfig.SPACE}`,
		DASH: `-`, // MINUS
		PLUS: `\\+`,
		SLASH: `\\/`,
		COLON: ":",
		COMMA: ",",
		SINGLE_QUOTE: SHLexerConfig.SINGLE_QUOTE,

		// ********** month rules **********
		SHAHRIVAR: "shahrivar|sha",

		// ********* numeric rules **********
		INT_00: "00",
		INT_01: "01",
		INT_02: "02",
		INT_03: "03",
		INT_04: "04",
		INT_05: "05",
		INT_06: "06",
		INT_07: "07",
		INT_08: "08",
		INT_09: "09",
		INT_10: "10",
		INT_11: "11",
		INT_12: "12",
		INT_13: "13",
		INT_14: "14",
		INT_15: "15",
		INT_16: "16",
		INT_17: "17",
		INT_18: "18",
		INT_19: "19",
		INT_20: "20",
		INT_21: "21",
		INT_22: "22",
		INT_23: "23",
		INT_24: "24",
		INT_25: "25",
		INT_26: "26",
		INT_27: "27",
		INT_28: "28",
		INT_29: "29",
		INT_30: "30",
		INT_31: "31",
		INT_32: "32",
		INT_33: "33",
		INT_34: "34",
		INT_35: "35",
		INT_36: "36",
		INT_37: "37",
		INT_38: "38",
		INT_39: "39",
		INT_40: "40",
		INT_41: "41",
		INT_42: "42",
		INT_43: "43",
		INT_44: "44",
		INT_45: "45",
		INT_46: "46",
		INT_47: "47",
		INT_48: "48",
		INT_49: "49",
		INT_50: "50",
		INT_51: "51",
		INT_52: "52",
		INT_53: "53",
		INT_54: "54",
		INT_55: "55",
		INT_56: "56",
		INT_57: "57",
		INT_58: "58",
		INT_59: "59",
		INT_60: "60",
		INT_61: "61",
		INT_62: "62",
		INT_63: "63",
		INT_64: "64",
		INT_65: "65",
		INT_66: "66",
		INT_67: "67",
		INT_68: "68",
		INT_69: "69",
		INT_70: "70",
		INT_71: "71",
		INT_72: "72",
		INT_73: "73",
		INT_74: "74",
		INT_75: "75",
		INT_76: "76",
		INT_77: "77",
		INT_78: "78",
		INT_79: "79",
		INT_80: "80",
		INT_81: "81",
		INT_82: "82",
		INT_83: "83",
		INT_84: "84",
		INT_85: "85",
		INT_86: "86",
		INT_87: "87",
		INT_88: "88",
		INT_89: "89",
		INT_90: "90",
		INT_91: "91",
		INT_92: "92",
		INT_93: "93",
		INT_94: "94",
		INT_95: "95",
		INT_96: "96",
		INT_97: "97",
		INT_98: "98",
		INT_99: "99",
		INT_0: "0",
		INT_1: "1",
		INT_2: "2",
		INT_3: "3",
		INT_4: "4",
		INT_5: "5",
		INT_6: "6",
		INT_7: "7",
		INT_8: "8",
		INT_9: "9",
		DIGIT: "[0-9]+", //  fragment
		ONE: "one",
		FIRST: "first",
		TWO: "two",
		SECOND: "seconds?|secs?",
		THREE: "three",
		FOUR: "four",
		FIVE: "five",
		SIX: "six",
		SEVEN: "seven",
		EIGHT: "eight",
		NINE: "nine",
		TEN: "ten",
		TENTH: "tenth",
		ELEVEN: "eleven",
		ELEVENTH: "eleventh",
		TWELVE: "twelve",
		TWELFTH: "twelfth",
		THIRD: "third",
		THIRTEEN: "thirteen",
		THIRTEENTH: "thirteenth",
		FOURTH: "fourth",
		FOURTEEN: "fourteen",
		FOURTEENTH: "fourteenth",
		FIFTH: "fifth",
		FIFTEEN: "fifteen",
		FIFTEENTH: "fifteenth",
		SIXTH: "sixth",
		SIXTEEN: "sixteen",
		SIXTEENTH: "sixteenth",
		SEVENTH: "seventh",
		SEVENTEEN: "seventeen",
		SEVENTEENTH: "seventeenth",
		EIGHTH: "eighth",
		EIGHTEEN: "eightt?een",
		EIGHTEENTH: "eighteenth",
		NINTH: "ninth",
		NINETEEN: "nineteen",
		NINETEENTH: "nineteenth",
		TWENTY: "twenty",
		TWENTIETH: "twentieth",
		THIRTIETH: "thirtieth",
		THIRTY: "thirty",

		// ********** month rules **********

		FARVARDIN: "farvardin|far",
		ORDIBEHESHT: "ordibehesht|ord",
		KHORDAD: "khordad|kho",
		TIR: "tir",
		AMORDAD: "amordad|mordad|amo|mor",
		//SHAHRIVAR: "shahrivar|sha",
		MEHR: "mehr?",
		ABAN: "aban?",
		AZAR: "azar?",
		DEY: "dey",
		BAHMAN: "bahman|bah",
		ESFAND: "es[fp]{1}and|es[fp]{1}",

		// ********** date rules **********

		SATURDAY: "sat(urday)?",
		SUNDAY: "sun(day)?",
		MONDAY: "mon(day)?",
		TUESDAY: "tue(sday)?",
		WEDNESDAY: "wed(nesday)?",
		THURSDAY: "thu(rsday)?",
		FRIDAY: "fri(day)?|weekend",

		// ********** common rules **********

		THIS: "this",
		OF: "of",
		LAST: "last",
		NEXT: "next",
		NOW: "now",
		AGO: "ago",
		BEFORE: "before",
		START: "start",
		END: "end",
		PREVIOUS: "previous",

		// ********** suffixes **********

		SUFFIXES: "st|nd|rd|th", //[stndrh]
		// ST: "st", ND: "nd", RD: "rd", TH: "th",

		// ********** time rules **********
		MICROSECOND: "microsecond|usec",
		MILLISECOND: "millisecond|msec|µsec|ms|µs",
		HOUR: "hours?",
		MINUTE: "minutes?|mins?",
		DAY: "days?",
		WEEKDAY: "weekdays?",
		WEEK: "weeks?",
		MONTH: "months?|mons?",
		YEAR: "years?",
		FORTNIGHT: "forth?night",

		TODAY: "today",
		TOMORROW: "tomorrow",
		TONIGHT: "tonight",
		YESTERDAY: "yesterday",

		AT: "@",
		BACK: "back",
		FRONT: "front",
		AM: "a" + SHLexerConfig.DOT + "?m" + SHLexerConfig.DOT + "?",
		PM: "p" + SHLexerConfig.DOT + "?m" + SHLexerConfig.DOT + "?",

		MIDNIGHT: "mid-?night",
		NOON: "noon|after-?noon",
		MORNING: "morning",
		EVENING: "evening|eve",
		NIGHT: "night",

		SIGN_TIME: "t",
		SIGN_WEEK: "w",
		UTC: "utc|gmt",
		EST: "est",
		EDT: "edt",
		CST: "cst",
		CDT: "cdt",
		MST: "mst",
		MDT: "mdt",
		PST: "pst",
		PDT: "pdt",

		// ********** date rules **********

		INT_VIII: "viii", // 8
		INT_VII: "vii", // 7
		INT_VI: "vi", // 6
		INT_V: "v", // 5
		INT_XII: "xii", // 12
		INT_XI: "xi", // 11
		INT_X: "x", // 10
		INT_IX: "ix", // 9
		INT_IV: "iv", // 4
		INT_III: "iii", // 3
		INT_II: "ii", // 2
		INT_I: "i", // 1

		// ********** holiday specific **********

		// "FOOL"         : 'fool|fools|fool'+SHLexerConfig.SINGLE_QUOTE+'s',
		// "BLACK"        : 'black',
		// "CHRISTMAS"    : '(christmas|xmas|x-mas)(es)?',
		// "COLUMBUS"     : 'columbus',
		// "EARTH"        : 'earth',
		// "EASTER"       : 'easter',
		// "FATHER"       : 'father|fathers|father'+SHLexerConfig.SINGLE_QUOTE+'s',
		// "FLAG"         : 'flag',
		// "GOOD"         : 'good',
		// "GROUNDHOG"    : SHLexerConfig.GROUND .SHLexerConfig.SPACE+'?'+SHLexerConfig.HOG .SHLexerConfig.SINGLE_QUOTE+'?s?',
		// "HALLOWEEN"    : '(halloween|haloween)s?',
		// "INAUGURATION" : 'inauguration|inaugaration',
		// "INDEPENDENCE" : 'independence|independance',
		// "KWANZAA"      : '(kwanzaa?)s?',
		// "LABOR"        : 'labor',
		// "MLK"          : 'mlk|martin'+SHLexerConfig.SPACE+'luther'+SHLexerConfig.SPACE+'king('+SHLexerConfig.COMMA.SHLexerConfig.SPACE+'jr'+SHLexerConfig.DOT+')?',
		// "MEMORIAL"     : 'memorial',
		// "MOTHER"       : 'mother'+SHLexerConfig.SINGLE_QUOTE+'?s?',
		// "NEW"          : 'new',
		// "PALM"         : 'palm',
		// "PATRIOT"      : 'patriot'+SHLexerConfig.SINGLE_QUOTE+'?s?',
		// "PRESIDENT"    : 'president'+SHLexerConfig.SINGLE_QUOTE+'?s?',
		// "PATRICK"      : '(patrick|patty|paddy)'+SHLexerConfig.SINGLE_QUOTE+'?s?',
		// "SAINT"        : 'saint',
		// "TAX"          : 'tax',
		// "THANKSGIVING" : 'thanksgivings?',
		// "ELECTION"     : 'election',
		// "VALENTINE"    : 'valentine'+SHLexerConfig.SINGLE_QUOTE+'?s?',
		// "VETERAN"      : 'veteran'+SHLexerConfig.SINGLE_QUOTE+'?s?',
		// "GROUND" 	   : SHLexerConfig.GROUND,//  fragment
		// "HOG"    	   : SHLexerConfig.HOG,//  fragment

		// ********** season specific **********

		// WINTER: "winters?",
		// FALL: "falls?",
		// AUTUMN: "autumns?",
		// SPRING: "springs?",
		// SUMMER: "summers?",

		TZ: "[A-Za-z]{3,6}",

		DOT: `${SHLexerConfig.DOT}`,
		UNKNOWN_CHAR: `[^ \t\\s${SHLexerConfig.DOT}]` //  fragment
	};

	definitions: any[] = [];

	constructor() {
		for (const [key, value] of Object.entries(SHLexerConfig.tokenDefinitions)) {
			if (value instanceof SHTokenDefn) {
				this.addTokenDefinition(value);
			} else if (typeof key === "string" && typeof value === "string") {
				this.addTokenDefinition(new SHTokenDefn(key, value));
			}
			//console.log(`new SHTokenDefn("${key}", "${value}"),`);
		}
	}

	/**
	 * @param TokenDefn tokenDefn
	 */
	public addTokenDefinition(tokenDefn: SHTokenDefn) {
		this.definitions.push(tokenDefn);
	}

	/**
	 * @return TokenDefn[]
	 */
	public getTokenDefinitions() {
		return this.definitions;
	}
}

const definitions = [
	new SHTokenDefn("SPACE", `[ 	\s]`),
	new SHTokenDefn("DASH", "-"),
	new SHTokenDefn("PLUS", "+"),
	new SHTokenDefn("SLASH", "/"),
	new SHTokenDefn("COLON", ":"),
	new SHTokenDefn("COMMA", ","),
	new SHTokenDefn("SINGLE_QUOTE", "'"),
	new SHTokenDefn("SHAHRIVAR", "shahrivar|sha"),
	new SHTokenDefn("FARVARDIN", "farvardin|far"),
	new SHTokenDefn("ORDIBEHESHT", "ordibehesht|ord"),
	new SHTokenDefn("KHORDAD", "khordad|kho"),
	new SHTokenDefn("TIR", "tir"),
	new SHTokenDefn("AMORDAD", "amordad|mordad|amo|mor"),
	new SHTokenDefn("MEHR", "mehr?"),
	new SHTokenDefn("ABAN", "aban?"),
	new SHTokenDefn("AZAR", "azar?"),
	new SHTokenDefn("DEY", "dey"),
	new SHTokenDefn("BAHMAN", "bahman|bah"),
	new SHTokenDefn("ESFAND", "es[fp]{1}and|es[fp]{1}"),
	new SHTokenDefn("INT_00", "00"),
	new SHTokenDefn("INT_01", "01"),
	new SHTokenDefn("INT_02", "02"),
	new SHTokenDefn("INT_03", "03"),
	new SHTokenDefn("INT_04", "04"),
	new SHTokenDefn("INT_05", "05"),
	new SHTokenDefn("INT_06", "06"),
	new SHTokenDefn("INT_07", "07"),
	new SHTokenDefn("INT_08", "08"),
	new SHTokenDefn("INT_09", "09"),
	new SHTokenDefn("INT_10", "10"),
	new SHTokenDefn("INT_11", "11"),
	new SHTokenDefn("INT_12", "12"),
	new SHTokenDefn("INT_13", "13"),
	new SHTokenDefn("INT_14", "14"),
	new SHTokenDefn("INT_15", "15"),
	new SHTokenDefn("INT_16", "16"),
	new SHTokenDefn("INT_17", "17"),
	new SHTokenDefn("INT_18", "18"),
	new SHTokenDefn("INT_19", "19"),
	new SHTokenDefn("INT_20", "20"),
	new SHTokenDefn("INT_21", "21"),
	new SHTokenDefn("INT_22", "22"),
	new SHTokenDefn("INT_23", "23"),
	new SHTokenDefn("INT_24", "24"),
	new SHTokenDefn("INT_25", "25"),
	new SHTokenDefn("INT_26", "26"),
	new SHTokenDefn("INT_27", "27"),
	new SHTokenDefn("INT_28", "28"),
	new SHTokenDefn("INT_29", "29"),
	new SHTokenDefn("INT_30", "30"),
	new SHTokenDefn("INT_31", "31"),
	new SHTokenDefn("INT_32", "32"),
	new SHTokenDefn("INT_33", "33"),
	new SHTokenDefn("INT_34", "34"),
	new SHTokenDefn("INT_35", "35"),
	new SHTokenDefn("INT_36", "36"),
	new SHTokenDefn("INT_37", "37"),
	new SHTokenDefn("INT_38", "38"),
	new SHTokenDefn("INT_39", "39"),
	new SHTokenDefn("INT_40", "40"),
	new SHTokenDefn("INT_41", "41"),
	new SHTokenDefn("INT_42", "42"),
	new SHTokenDefn("INT_43", "43"),
	new SHTokenDefn("INT_44", "44"),
	new SHTokenDefn("INT_45", "45"),
	new SHTokenDefn("INT_46", "46"),
	new SHTokenDefn("INT_47", "47"),
	new SHTokenDefn("INT_48", "48"),
	new SHTokenDefn("INT_49", "49"),
	new SHTokenDefn("INT_50", "50"),
	new SHTokenDefn("INT_51", "51"),
	new SHTokenDefn("INT_52", "52"),
	new SHTokenDefn("INT_53", "53"),
	new SHTokenDefn("INT_54", "54"),
	new SHTokenDefn("INT_55", "55"),
	new SHTokenDefn("INT_56", "56"),
	new SHTokenDefn("INT_57", "57"),
	new SHTokenDefn("INT_58", "58"),
	new SHTokenDefn("INT_59", "59"),
	new SHTokenDefn("INT_60", "60"),
	new SHTokenDefn("INT_61", "61"),
	new SHTokenDefn("INT_62", "62"),
	new SHTokenDefn("INT_63", "63"),
	new SHTokenDefn("INT_64", "64"),
	new SHTokenDefn("INT_65", "65"),
	new SHTokenDefn("INT_66", "66"),
	new SHTokenDefn("INT_67", "67"),
	new SHTokenDefn("INT_68", "68"),
	new SHTokenDefn("INT_69", "69"),
	new SHTokenDefn("INT_70", "70"),
	new SHTokenDefn("INT_71", "71"),
	new SHTokenDefn("INT_72", "72"),
	new SHTokenDefn("INT_73", "73"),
	new SHTokenDefn("INT_74", "74"),
	new SHTokenDefn("INT_75", "75"),
	new SHTokenDefn("INT_76", "76"),
	new SHTokenDefn("INT_77", "77"),
	new SHTokenDefn("INT_78", "78"),
	new SHTokenDefn("INT_79", "79"),
	new SHTokenDefn("INT_80", "80"),
	new SHTokenDefn("INT_81", "81"),
	new SHTokenDefn("INT_82", "82"),
	new SHTokenDefn("INT_83", "83"),
	new SHTokenDefn("INT_84", "84"),
	new SHTokenDefn("INT_85", "85"),
	new SHTokenDefn("INT_86", "86"),
	new SHTokenDefn("INT_87", "87"),
	new SHTokenDefn("INT_88", "88"),
	new SHTokenDefn("INT_89", "89"),
	new SHTokenDefn("INT_90", "90"),
	new SHTokenDefn("INT_91", "91"),
	new SHTokenDefn("INT_92", "92"),
	new SHTokenDefn("INT_93", "93"),
	new SHTokenDefn("INT_94", "94"),
	new SHTokenDefn("INT_95", "95"),
	new SHTokenDefn("INT_96", "96"),
	new SHTokenDefn("INT_97", "97"),
	new SHTokenDefn("INT_98", "98"),
	new SHTokenDefn("INT_99", "99"),
	new SHTokenDefn("INT_0", "0"),
	new SHTokenDefn("INT_1", "1"),
	new SHTokenDefn("INT_2", "2"),
	new SHTokenDefn("INT_3", "3"),
	new SHTokenDefn("INT_4", "4"),
	new SHTokenDefn("INT_5", "5"),
	new SHTokenDefn("INT_6", "6"),
	new SHTokenDefn("INT_7", "7"),
	new SHTokenDefn("INT_8", "8"),
	new SHTokenDefn("INT_9", "9"),
	new SHTokenDefn("DIGIT", "[0-9]+"),
	new SHTokenDefn("ONE", "one"),
	new SHTokenDefn("FIRST", "first"),
	new SHTokenDefn("TWO", "two"),
	new SHTokenDefn("SECOND", "seconds?|secs?"),
	new SHTokenDefn("THREE", "three"),
	new SHTokenDefn("FOUR", "four"),
	new SHTokenDefn("FIVE", "five"),
	new SHTokenDefn("SIX", "six"),
	new SHTokenDefn("SEVEN", "seven"),
	new SHTokenDefn("EIGHT", "eight"),
	new SHTokenDefn("NINE", "nine"),
	new SHTokenDefn("TEN", "ten"),
	new SHTokenDefn("TENTH", "tenth"),
	new SHTokenDefn("ELEVEN", "eleven"),
	new SHTokenDefn("ELEVENTH", "eleventh"),
	new SHTokenDefn("TWELVE", "twelve"),
	new SHTokenDefn("TWELFTH", "twelfth"),
	new SHTokenDefn("THIRD", "third"),
	new SHTokenDefn("THIRTEEN", "thirteen"),
	new SHTokenDefn("THIRTEENTH", "thirteenth"),
	new SHTokenDefn("FOURTH", "fourth"),
	new SHTokenDefn("FOURTEEN", "fourteen"),
	new SHTokenDefn("FOURTEENTH", "fourteenth"),
	new SHTokenDefn("FIFTH", "fifth"),
	new SHTokenDefn("FIFTEEN", "fifteen"),
	new SHTokenDefn("FIFTEENTH", "fifteenth"),
	new SHTokenDefn("SIXTH", "sixth"),
	new SHTokenDefn("SIXTEEN", "sixteen"),
	new SHTokenDefn("SIXTEENTH", "sixteenth"),
	new SHTokenDefn("SEVENTH", "seventh"),
	new SHTokenDefn("SEVENTEEN", "seventeen"),
	new SHTokenDefn("SEVENTEENTH", "seventeenth"),
	new SHTokenDefn("EIGHTH", "eighth"),
	new SHTokenDefn("EIGHTEEN", "eightt?een"),
	new SHTokenDefn("EIGHTEENTH", "eighteenth"),
	new SHTokenDefn("NINTH", "ninth"),
	new SHTokenDefn("NINETEEN", "nineteen"),
	new SHTokenDefn("NINETEENTH", "nineteenth"),
	new SHTokenDefn("TWENTY", "twenty"),
	new SHTokenDefn("TWENTIETH", "twentieth"),
	new SHTokenDefn("THIRTIETH", "thirtieth"),
	new SHTokenDefn("THIRTY", "thirty"),
	new SHTokenDefn("SATURDAY", "sat(urday)?"),
	new SHTokenDefn("SUNDAY", "sun(day)?"),
	new SHTokenDefn("MONDAY", "mon(day)?"),
	new SHTokenDefn("TUESDAY", "tue(sday)?"),
	new SHTokenDefn("WEDNESDAY", "wed(nesday)?"),
	new SHTokenDefn("THURSDAY", "thu(rsday)?"),
	new SHTokenDefn("FRIDAY", "fri(day)?|weekend"),
	new SHTokenDefn("THIS", "this"),
	new SHTokenDefn("OF", "of"),
	new SHTokenDefn("LAST", "last"),
	new SHTokenDefn("NEXT", "next"),
	new SHTokenDefn("NOW", "now"),
	new SHTokenDefn("AGO", "ago"),
	new SHTokenDefn("BEFORE", "before"),
	new SHTokenDefn("START", "start"),
	new SHTokenDefn("END", "end"),
	new SHTokenDefn("PREVIOUS", "previous"),
	new SHTokenDefn("SUFFIXES", "st|nd|rd|th"),
	new SHTokenDefn("MICROSECOND", "microsecond|usec"),
	new SHTokenDefn("MILLISECOND", "millisecond|msec|µsec|ms|µs"),
	new SHTokenDefn("HOUR", "hours?"),
	new SHTokenDefn("MINUTE", "minutes?|mins?"),
	new SHTokenDefn("DAY", "days?"),
	new SHTokenDefn("WEEKDAY", "weekdays?"),
	new SHTokenDefn("WEEK", "weeks?"),
	new SHTokenDefn("MONTH", "months?|mons?"),
	new SHTokenDefn("YEAR", "years?"),
	new SHTokenDefn("FORTNIGHT", "forth?night"),
	new SHTokenDefn("TODAY", "today"),
	new SHTokenDefn("TOMORROW", "tomorrow"),
	new SHTokenDefn("TONIGHT", "tonight"),
	new SHTokenDefn("YESTERDAY", "yesterday"),
	new SHTokenDefn("AT", "@"),
	new SHTokenDefn("BACK", "back"),
	new SHTokenDefn("FRONT", "front"),
	new SHTokenDefn("AM", "a.?m.?"),
	new SHTokenDefn("PM", "p.?m.?"),
	new SHTokenDefn("MIDNIGHT", "mid-?night"),
	new SHTokenDefn("NOON", "noon|after-?noon"),
	new SHTokenDefn("MORNING", "morning"),
	new SHTokenDefn("EVENING", "evening|eve"),
	new SHTokenDefn("NIGHT", "night"),
	new SHTokenDefn("SIGN_TIME", "t"),
	new SHTokenDefn("SIGN_WEEK", "w"),
	new SHTokenDefn("UTC", "utc|gmt"),
	new SHTokenDefn("EST", "est"),
	new SHTokenDefn("EDT", "edt"),
	new SHTokenDefn("CST", "cst"),
	new SHTokenDefn("CDT", "cdt"),
	new SHTokenDefn("MST", "mst"),
	new SHTokenDefn("MDT", "mdt"),
	new SHTokenDefn("PST", "pst"),
	new SHTokenDefn("PDT", "pdt"),
	new SHTokenDefn("INT_VIII", "viii"),
	new SHTokenDefn("INT_VII", "vii"),
	new SHTokenDefn("INT_VI", "vi"),
	new SHTokenDefn("INT_V", "v"),
	new SHTokenDefn("INT_XII", "xii"),
	new SHTokenDefn("INT_XI", "xi"),
	new SHTokenDefn("INT_X", "x"),
	new SHTokenDefn("INT_IX", "ix"),
	new SHTokenDefn("INT_IV", "iv"),
	new SHTokenDefn("INT_III", "iii"),
	new SHTokenDefn("INT_II", "ii"),
	new SHTokenDefn("INT_I", "i"),
	new SHTokenDefn("TZ", "[A-Za-z]{3,6}"),
	new SHTokenDefn("DOT", "."),
	new SHTokenDefn("UNKNOWN_CHAR", `[^ 	\s.]`)
];
